% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/monty-hall-pkg.R
\name{play_n_games}
\alias{play_n_games}
\title{Loop through a simulation the game n times and return the results as a dataframe.}
\usage{
play_n_games(n = 100)
}
\arguments{
\item{n}{The number of games to simulate.}
}
\value{
A dataframe containing the results of each strategy for every game iteration.  The
columns contain the strategy and the outcome of the game.  The dataframe contains
two rows for each game, one for the stay strategy and one for the #' switch strategy.
}
\description{
The function simulates the game n times and returns the results as a dataframe.
}
\details{
The function uses a for loop to iterate through the number of games specified.  It
calls the 'play_game()' function to execute the game and collect the results.
The function also uses the 'dplyr' package to bind the results into a dataframe.
Resutls are presented as a table of proportions of wins and losses for each strategy
rounded to two decimal places.
}
\examples{
#'  play_game()
  - create_game() output: c("goat", "car", "goat")
  - select_door() output: 1 
  - open_goat_door( c("goat", "car", "goat"), 1) output: 3
  - change_door( stay=T, 3, 1) output: 1
   - determine_winner( 1, c("goat", "car", "goat")) output: "lose"
  - change_door( stay=F, 3, 1) output: 2
   - determine_winner( 1, c("goat", "car", "goat")) output: "win"
Output (n = 1):
  game.results("stay", "lose"
              "switch", "win")

Output (n = 3):
  game.results("stay", "lose"
              "switch", "win")
              "stay", "lose"
              "switch", "win"
              "stay", "win"
              "switch", "lose")

}
